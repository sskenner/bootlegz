==bootlegz

http://sskenner.github.io/assets/1_bootlegz_homepage.png

bootlegz, a Netflix clone, is a production quality web application of non-trivial size and complexity built in a RoR bootcamp. Although the un-wired template of the UI was provided by the Tealeaf Academy crew link:http://gotealeaf.com, yours truly coded all of the features and functionality.  The app is currently sleeping on heroku. Please contact me if you would like me to wake it up and forward the link for review.

==Features:

<code></code> •

<code>e-Commerce</code> •
http://sskenner.github.io/assets/2_bootlegz_registration.png

<code>Authentication</code> •
http://sskenner.github.io/assets/3_bootlegz_authenticate.png

<code>Forgot Password</code> •
http://sskenner.github.io/assets/4_bootlegz_forgot_pw.png

<code>Auto Email (Mailgun and Automailer)</code> •
http://sskenner.github.io/assets/5_bootlegz_mailgun.png

<code>Invite Others</code> •
http://sskenner.github.io/assets/6_bootlegz_categories.png

<code>User Reviews</code> • <code>Ratings</code> • <code>Play Video</code> •
http://sskenner.github.io/assets/7_bootlegz__video_info.png

<code>Queue & Rating Management</code> •
http://sskenner.github.io/assets/8_bootlegz_my_queue.png

<code>Social Networking</code> •
http://sskenner.github.io/assets/9_bootlegz_following.png

<code>Staging & Production Server Setup</code> • <code>Sidekiq & Unicorn workers</code> •
http://sskenner.github.io/assets/10_bootlegz_heroku.png

==Topic areas:

==Testing
<code>Syntax</code> •
<code>Test driven development process</code> •
<code>Automated testing advanced techniques</code> •
<code>Test level determination</code>
==Advanced rails topics
<code>Advanced routing concerns</code> •
<code>Background drops</code> •
<code>Integration</code> •
<code>Complex forms</code> •
<code>Custom form builders</code> •
<code>Advanced modeling / querying techniques</code>
==Integration
<code>3rd party apps</code> •
<code>Consume and test APIs</code> •
<code>API integration exposure and testing</code>
==Workflows
<code>App behaviors</code> •
<code>Rules</code> •
<code>Subsystems involvement (web, background drops, emails)</code> •
<code>Architecture to manage complexity</code> •
<code>Modular and organized code development</code> •
<code>Deployment Pipeline</code>
==e-Commerce
<code>Payments processing</code> •
<code>Record keeping</code> •
<code>Account management</code> •
<code>Access control and privileges</code> •
<code>Recurring billing</code> •
<code>Cancelation</code>
==Production application maintenance concerns (post launch)
<code>Staging servers</code> •
<code>Data migration / backup</code> •
<code>Performance monitoring</code> •
<code>Exception handling</code> •
<code>Asset hosting, et al</code>
